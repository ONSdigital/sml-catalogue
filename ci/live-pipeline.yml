# This is the prod pipeline to run the BDD tests on prod, pre-prod and dev.

# Build type 0 = freeze files, 1 = freeze and publish as release candidate, 2 = freeze and publish as
# final version
env_setups:
  general: &general_params
    AWS_DEFAULT_REGION: eu-west-2
    S3_KEY: sml-portal.tfstate
    CONCOURSE_ACCESS_TOKEN: ((github_access_token))
    SHARED_ACCOUNT_ROLE: &shared_account_role arn:aws:iam::289259348294:role/spp-concourse-access-prod

  general_dev: &general_dev_params
    TF_VAR_deployment_type: dev
    S3_NAME: statistical-methods-library-tf-state
    <<: *general_params

  general_preprod: &general_preprod_params
    S3_NAME: statistical-methods-library-tf-state-preprod
    TF_VAR_deployment_type: preprod
    <<: *general_params

  general_prod: &general_prod_params
    S3_NAME: statistical-methods-library-tf-state-prod
    TF_VAR_deployment_type: prod
    <<: *general_params

  github_pull_creds: &github_pull_creds
    username: ((github_access_token))
    password: x-oauth-basic
    

  # -------------------

  sml_dev: &sml_dev_setup
    <<: *general_dev_params
    ACCOUNT_NAME: &account sml_dev
    AWS_ACCOUNT_ID: ((aws_account_sml_dev))
    AWS_SERVICE_ROLE: &role arn:aws:iam::((aws_account_sml_dev)):role/spp-concourse-sml-deployment-dev
    TF_VAR_deployment_role: *role
    TF_VAR_environment: dev
    TF_VAR_account: *account

  sml_preprod: &sml_preprod_setup
    <<: *general_preprod_params
    ACCOUNT_NAME: &account sml_preprod
    AWS_ACCOUNT_ID: ((aws_account_sml_preprod))
    AWS_SERVICE_ROLE: &role arn:aws:iam::((aws_account_sml_preprod)):role/spp-concourse-sml-deployment-preprod
    TF_VAR_deployment_role: *role
    TF_VAR_environment: preprod
    TF_VAR_account: *account

  sml_prod: &sml_prod_setup
    <<: *general_prod_params
    ACCOUNT_NAME: &account sml_prod
    AWS_ACCOUNT_ID: ((aws_account_sml_prod))
    AWS_SERVICE_ROLE: &role arn:aws:iam::((aws_account_sml_prod)):role/spp-concourse-sml-deployment-prod
    TF_VAR_deployment_role: *role
    TF_VAR_environment: prod
    TF_VAR_account: *account

resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:
  - name: tag_commit
    type: git
    icon: github
    check_every: never
    webhook_token: gesture
    source:
      uri: https://github.com/ONSdigital/sml-catalogue.git
      branch: main
      tag: ((RELEASE_CANDIDATE))
      username: ((github_access_token))
      password: x-oauth-basic
  - name: main
    type: git
    icon: github
    check_every: never
    webhook_token: gesture
    source:
      uri: https://github.com/ONSdigital/sml-catalogue.git
      branch: main
      username: ((github_access_token))
      password: x-oauth-basic
  - name: main-updated
    type: git
    icon: github
    check_every: 1m
    webhook_token: gesture
    source:
      uri: https://github.com/ONSdigital/sml-catalogue.git
      branch: main
      username: ((github_access_token))
      password: x-oauth-basic
      ignore_paths:
      - CHANGELOG.MD
      - pyproject.toml
      - poetry.lock
  - name: pr-open
    type: pull-request
    icon: github
    check_every: 1m
    webhook_token: gesture
    source:
      repository: ONSdigital/sml-catalogue
      access_token: ((github_access_token))
      base_branch: main
      disable_forks: true
      states: ["OPEN"]
  - name: pr-done
    type: pull-request
    icon: github
    check_every: 1m
    webhook_token: gesture
    source:
      repository: ONSdigital/sml-catalogue
      access_token: ((github_access_token))
      base_branch: main
      disable_forks: true
      states: ["CLOSED", "MERGED"]

jobs:
  - name: build_and_deploy_dev_branch
    plan:
      - do:
        - get: repo
          resource: pr-open
          trigger: true
          version: every
        - put: repo
          resource: pr-open
          params:
            path: repo
            status: pending
            context: Deploying_Dev
        - in_parallel:
          - task: terraform-apply-environment
            file: repo/ci/tasks/terraform/apply_terraform.yml
            params:
              <<: *github_pull_creds
              <<: *sml_dev_setup
              TERRAFORM_SOURCE: repo/terraform
              WORKSPACE_KEY_INFIX: workspace

          - task: build-files
            file: repo/ci/tasks/build_and_deploy/build_files.yml
            params:
              BUILD_TYPE: 0
              GH_TOKEN: ((github_access_token))
              SIGNING_KEY: ((github_ons_spp_machine_user_gpg_key_private))

        - task: deploy_code
          file: repo/ci/tasks/build_and_deploy/deploy.yml
          params:
            <<: *github_pull_creds
            <<: *sml_dev_setup

        - task: run-acceptance-tests
          file: repo/ci/tasks/testing/run_bdd_tests.yml

    on_success:
      put: repo
      resource: pr-open
      params:
        path: repo
        status: success
        context: Deploying_Dev
        comment_file: GITHUB_OUTPUT/output.txt
        delete_previous_comments: true

    on_failure:
      put: repo
      resource: pr-open
      params:
        path: repo
        status: failure
        context: Deploying_Dev
        comment_file: GITHUB_OUTPUT/output.txt
        delete_previous_comments: true

  - name: build_and_deploy_dev
    plan:
      - do:
        - get: repo
          resource: main-updated
          trigger: true
          version: every
        - in_parallel:
          - task: terraform-apply-environment
            file: repo/ci/tasks/terraform/apply_terraform.yml
            params:
              <<: *github_pull_creds
              <<: *sml_dev_setup
              TERRAFORM_SOURCE: repo/terraform
              WORKSPACE_KEY_INFIX: workspace
              TF_WORKSPACE: main

          - task: build-files
            file: repo/ci/tasks/build_and_deploy/build_files.yml
            params:
              BUILD_TYPE: 0
              GH_TOKEN: ((github_access_token))
              SIGNING_KEY: ((github_ons_spp_machine_user_gpg_key_private))

        - task: deploy_code
          file: repo/ci/tasks/build_and_deploy/deploy.yml
          params:
            <<: *github_pull_creds
            <<: *sml_dev_setup
            workspace_name: main

        - task: run-acceptance-tests
          file: repo/ci/tasks/testing/run_bdd_tests.yml

  - name: build_and_deploy_preprod
    plan:
      - do:
        - get: repo
          resource: main
        - in_parallel:
          - task: terraform-apply-environment
            file: repo/ci/tasks/terraform/apply_terraform.yml
            params:
              <<: *github_pull_creds
              <<: *sml_preprod_setup
              TERRAFORM_SOURCE: repo/terraform
              WORKSPACE_KEY_INFIX: workspace
              TF_WORKSPACE: main

          - task: build-files
            file: repo/ci/tasks/build_and_deploy/build_files.yml
            params:
              <<: *github_pull_creds
              <<: *sml_preprod_setup
              BUILD_TYPE: 1
              GH_TOKEN: ((github_access_token))
              SIGNING_KEY: ((github_ons_spp_machine_user_gpg_key_private))

        - task: deploy_code
          file: repo/ci/tasks/build_and_deploy/deploy.yml
          params:
            <<: *github_pull_creds
            <<: *sml_preprod_setup
            workspace_name: main

        - task: run-acceptance-tests
          file: repo/ci/tasks/testing/run_bdd_tests.yml

  - name: build_and_deploy_prod
    plan:
      - do:
        - get: repo
          resource: tag_commit
        - in_parallel:
          - task: terraform-apply-environment
            file: repo/ci/tasks/terraform/apply_terraform.yml
            params:
              <<: *github_pull_creds
              <<: *sml_prod_setup
              TERRAFORM_SOURCE: repo/terraform
              WORKSPACE_KEY_INFIX: workspace
              TF_WORKSPACE: main

          - task: build-files
            file: repo/ci/tasks/build_and_deploy/build_files.yml
            params:
              BUILD_TYPE: 2
              GH_TOKEN: ((github_access_token))
              SIGNING_KEY: ((github_ons_spp_machine_user_gpg_key_private))

        - task: deploy_code
          file: repo/ci/tasks/build_and_deploy/deploy.yml
          params:
            <<: *github_pull_creds
            <<: *sml_prod_setup
            workspace_name: main

        - task: run-acceptance-tests
          file: repo/ci/tasks/testing/run_bdd_tests.yml

  - name: destroy_workspace
    serial: true
    plan:
      - do:
        - get: repo
          resource: pr-done
          trigger: true
          version: every
        - put: repo
          resource: pr-done
          params:
             path: repo
             status: pending
             context: Deleting Workspace
        - task: init-metadata
          file: repo/ci/tasks/terraform/init_metadata.yml
        - task: terraform
          file: repo/ci/tasks/terraform/destroy_terraform.yml
          params:
            <<: *sml_dev_setup
            WORKSPACE_KEY_INFIX: workspace
    on_success:
      put: repo
      resource: pr-done
      params:
        path: repo
        status: success
        context: Deleting Workspace

    on_failure:
      put: repo
      resource: pr-done
      params:
        path: repo
        status: failure
        context: Deleting Workspace
