name: deploy
on: 
  pull_request:
    branches:
      - main
permissions:
  id-token: write
  contents: read    # This is required for actions/checkout
jobs:
  run-terraform:
    runs-on: ubuntu-latest
    container: onsdigital/spp-terraform:1
    outputs:
      cloudfront_id: ${{ steps.apply.outputs.cloudfront_id }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: Configure AWS credentials from Dev account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::115311790871:role/sml-deploy
          aws-region: eu-west-2
      - run: terraform fmt -check -recursive -diff
      - id: apply
        run: |
          cd terraform
          terraform init
          export TF_WORKSPACE=${{ github.ref_name }}
          echo $TF_WORKSPACE
          terraform apply        
          echo "::set-output name=cloudfront_id::`terraform output -raw cloudfront_id`"
  build-files:
    runs-on: ubuntu-latest
    needs: run-terraform
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: Configure AWS credentials from Dev account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::115311790871:role/sml-deploy
          aws-region: eu-west-2
      - name: Install pipenv
        run: pip install pipenv
      - name: Create venv
        run: python3 -m venv venv
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pipenv sync --dev
      - name: Lint
        run: |
          source venv/bin/activate
          black --check --diff sml_builder
      - name: Freeze flask
        run: |
          source venv/bin/activate
          echo "Installing the ONS design system"
          ./get_design_system.sh
          echo "Freezing flask"
          python freeze.py
      - name: Upload files
        run: |
          echo ${{needs.run-terraform.outputs.cloudfront_id}}

      